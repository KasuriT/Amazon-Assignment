package Models;
import java.util.ArrayList;
import java.util.Arrays;

import Test.Ancera.Test_Elements;

public class CoccidiaModel {

	public String TestCaseName;
	public String TestCaseDescription;
	public String TestCaseNameSearch;
	public String TestCaseDescriptionSearch;
	public ArrayList<ReportFilters> lstFilters;
	public boolean Filter1;
	public boolean Filter2;
	public boolean Filter3;
	public boolean paginationExist;
	public boolean paginationLastPage;
	public boolean paginationNextPage;
	public boolean paginationFirstPage;
	public boolean paginationPreviousPage;
	public boolean sortLogic1;
	public boolean sortLogic2;
	public boolean startWith;
	public boolean endsWith;
	public boolean contains;
	public String input;

	public CoccidiaModel() {

	}

	public static String applyFilterTitle = "Verify user can apply ";
	public static String applyFilterDesc = "This test case will verify that user can apply ";
	public static String filterIndicatorTitle = "Verify that selected checkbox/s moves to the top on applying ";
	public static String filterIndicatorDesc = "This test case will verify that selected checkbox/s moves to the top on applying ";



	public static ArrayList<CoccidiaModel> FillData() {
		ArrayList<CoccidiaModel> lstCoccidiaModel = new ArrayList<CoccidiaModel>();
		CoccidiaModel objTmp = new CoccidiaModel();
		ReportFilters objFilter = new ReportFilters();
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Lane Filter";
		objTmp.TestCaseName = "AN-CL-17: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-18: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-laneNum";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Lane"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
	
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-19: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-20: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-sampleId";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Sample-Id"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("4"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status Filter";
		objTmp.TestCaseName = "AN-CL-21: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-22: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-result_status";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Instrument-Id"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Assay Filter";
		objTmp.TestCaseName = "AN-CL-23: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-24: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-pathogen";
		objFilter.FilterXPath = "filter-Assay";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Assay"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);  

//		objTmp = new CoccidiaModel();
//		objFilter = new ReportFilters();
//		objFilter.FilterName = "Site Name Filter";
//		objTmp.TestCaseName = "AN-CL-25: "+applyFilterTitle+objFilter.FilterName;
//		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
//		objTmp.TestCaseNameSearch = "AN-CL-26: "+filterIndicatorTitle+objFilter.FilterName;
//		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
//		objTmp.lstFilters = new ArrayList<>();
//		objFilter.FilterID = "#sort-site_id";
//		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Site-Name"));
//		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
//		objTmp.lstFilters.add(objFilter);
//		lstCoccidiaModel.add(objTmp); 
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample Matrix Filter";
		objTmp.TestCaseName = "AN-CL-27: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-28: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-sample_matrix";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Sample-Matrix"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Customer Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-29: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-30: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-customer_sample_id";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Customer-Sample-ID"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Received Filter";
		objTmp.TestCaseName = "AN-CL-31: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-32: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-metadata_date_recieved";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Date-Received"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Cartridge ID Filter";
		objTmp.TestCaseName = "AN-CL-33: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-34: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-cartridgeId";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Cartridge-Id"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Instrument ID Filter";
		objTmp.TestCaseName = "AN-CL-26: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-27: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-instrumentId";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Instrument-Id"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Piper User Filter";
		objTmp.TestCaseName = "AN-CL-28: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-29: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-user_name";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Piper-User"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Kit Lot Filter";
		objTmp.TestCaseName = "AN-CL-30: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-31: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-kit_lot";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Kit-Lot"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Improc Version Filter";
		objTmp.TestCaseName = "AN-CL-32: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-33 "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-version";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Improc-Version"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site ID Filter";
		objTmp.TestCaseName = "AN-CL-34: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-35: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-testSiteId";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("test-site-id"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site Name Filter";
		objTmp.TestCaseName = "AN-CL-36: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-37: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-testSiteName";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("test-site-name"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Requested Assay Filter";
		objTmp.TestCaseName = "AN-CL-38: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-39: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-requested_assay";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Requested-Assay"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1", "2"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Flock ID Filter";
		objTmp.TestCaseName = "AN-CL-40: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-41: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-flock_id";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Flock-ID"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1", "2"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status Filter";
		objTmp.TestCaseName = "AN-CL-42: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-43: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-collection_site_type";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("Collection-Site-Type"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("1"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		return lstCoccidiaModel;
	}


	public static ArrayList<CoccidiaModel> FillDate() {
		ArrayList<CoccidiaModel> lstCoccidiaModel = new ArrayList<CoccidiaModel>();
		CoccidiaModel objTmp = new CoccidiaModel();

		objTmp.TestCaseName = "AN-CL-05: Verify user can filter Today date from date Filter";
		objTmp.TestCaseDescription = "This testcase will verify the functionality of date filter after selecting 'Today'";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.Filter3 = false;
		objTmp.lstFilters = new ArrayList<>();
		ReportFilters objFilter = new ReportFilters();
		objFilter.FilterName = "Date Filter";
		objFilter.FilterListXPathSearch = Test_Elements.clToday;
		objFilter.toMonth = "0";
		objFilter.fromMonth = "0";
		objFilter.toDate = "0";
		objFilter.fromDate = "0";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-06: Verify user can filter Last 24 Hours from date Filter";
		objTmp.TestCaseDescription = "This testcase will verify the functionality of Last 24 Hours after selecting 'Last 24 Hours'";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.Filter3 = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Filter";
		objFilter.FilterListXPathSearch = Test_Elements.clLast24Hours;
		objFilter.toMonth = "0";
		objFilter.fromMonth = "0";
		objFilter.toDate = "-1";
		objFilter.fromDate = "-1";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-07: Verify user can filter Last 7 Days from date Filter";
		objTmp.TestCaseDescription = "This testcase will verify the functionality of Last 7 Days after selecting 'Last 7 Days'";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.Filter3 = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Filter";
		objFilter.FilterListXPathSearch = Test_Elements.clLast7Days;
		objFilter.toMonth = "0";
		objFilter.fromMonth = "0";
		objFilter.toDate = "0";
		objFilter.fromDate = "-7";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-08: Verify user can filter Last 30 Days from date Filter";
		objTmp.TestCaseDescription = "This testcase will verify the functionality of Last 30 Days after selecting 'Last 30 Days'";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.Filter3 = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Filter";
		objFilter.FilterListXPathSearch = Test_Elements.clLast30Days;
		objFilter.toMonth = "0";
		objFilter.fromMonth = "0";
		objFilter.toDate = "0";
		objFilter.fromDate = "-30";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-09: Verify user can filter Last Month from date Filter";
		objTmp.TestCaseDescription = "This testcase will verify the functionality of Last Month after selecting 'Last Month'";
		objTmp.Filter1 = false;
		objTmp.Filter2 = true;
		objTmp.Filter3 = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Filter";
		objFilter.FilterListXPathSearch = Test_Elements.clLastMonth;
		objFilter.toMonth = "-1";
		objFilter.fromMonth = "-1";
		objFilter.toDate = "30";
		objFilter.fromDate = "1";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-10: Verify user can filter This Month from date Filter";
		objTmp.TestCaseDescription = "This testcase will verify the functionality of This Month after selecting 'This Month'";
		objTmp.Filter1 = false;
		objTmp.Filter2 = false;
		objTmp.Filter3 = true;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Filter";
		objFilter.FilterListXPathSearch = Test_Elements.clThisMonth;
		objFilter.toMonth = "0";
		objFilter.fromMonth = "0";
		objFilter.toDate = "0";
		objFilter.fromDate = "1";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		return lstCoccidiaModel;
	}
	

	public static ArrayList<CoccidiaModel> EnterDate() {
		ArrayList<CoccidiaModel> lstCoccidiaModel = new ArrayList<CoccidiaModel>();
		CoccidiaModel objTmp = new CoccidiaModel();

		objTmp.TestCaseName = "AN-CL-11: Verify user cannot apply filter with invalid date";
		objTmp.TestCaseDescription = "This testcase will verify that user cannot add date with invalid from and to date";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.lstFilters = new ArrayList<>();
		ReportFilters objFilter = new ReportFilters();
		objFilter.FilterName = "Enter invalid date";
		objFilter.fromDate = "12/01/2020";
		objFilter.toDate = "11/11/202020";
		objFilter.alertMessage = "Please select a valid date";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-12: Verify user cannot apply filter with any other date format except mm/dd/yyyy";
		objTmp.TestCaseDescription = "This testcase will verify that user cannot apply filter with any other date format except mm/dd/yyyy";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Enter any other date format except mm/dd/yyyy";
		objFilter.fromDate = "12/01/2021";
		objFilter.toDate = "20/01/2021";
		objFilter.alertMessage = "Please select a valid date";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-13: Verify user cannot apply filter with from date greater than to date";
		objTmp.TestCaseDescription = "This testcase will verify that user cannot apply filter with from date greater than to date";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Enter from date greater than to date";
		objFilter.fromDate = "12/01/2020";
		objFilter.toDate = "10/01/2020";
		objFilter.alertMessage = "Please select a valid date";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-14: Verify user can search for records with valid date";
		objTmp.TestCaseDescription = "This testcase will verify that user can search for records with valid date";
		objTmp.Filter1 = false;
		objTmp.Filter2 = true;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Enter valid date";
		objFilter.fromDate = "12/01/2020";
		objFilter.toDate = "01/07/2021";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		return lstCoccidiaModel;
	}


	public static ArrayList<CoccidiaModel> pagination() {
		ArrayList<CoccidiaModel> lstCoccidiaModel = new ArrayList<CoccidiaModel>();
		CoccidiaModel objTmp = new CoccidiaModel();

		objTmp.TestCaseName = "AN-CL-138: Verify pagination exist on Coccidia Log report";
		objTmp.TestCaseDescription = "This testcase will verify that pagination exist on Coccidia Log report";
		objTmp.paginationExist = true;
		objTmp.paginationLastPage = false;
		objTmp.paginationPreviousPage = false;
		objTmp.paginationFirstPage = false;
		objTmp.paginationNextPage = false;
		objTmp.lstFilters = new ArrayList<>();
		ReportFilters objFilter = new ReportFilters();
		objFilter.FilterName = "Pagination exists";
		objFilter.paginationPage = "next-page";
		objFilter.paginationCount = Test_Elements.clTotalPages;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-139: Verify user navigates to last page on clicking '>>' button in pagnation";
		objTmp.TestCaseDescription = "This testcase will verify that user navgates to last page on clicking '>>' button in pagnation";
		objTmp.paginationExist = false;
		objTmp.paginationLastPage = true;
		objTmp.paginationPreviousPage = false;
		objTmp.paginationFirstPage = false;
		objTmp.paginationNextPage = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "'>>'";
		objFilter.paginationPage = "last-page";
		objFilter.paginationCount = Test_Elements.clTotalPages;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-140: Verify user navigates to previous page on clicking '<' button in pagnation";
		objTmp.TestCaseDescription = "This testcase will verify that user navgates to previous page on clicking '<' button in pagnation";
		objTmp.paginationExist = false;
		objTmp.paginationLastPage = false;
		objTmp.paginationPreviousPage = true;
		objTmp.paginationFirstPage = false;
		objTmp.paginationNextPage = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "'<'";
		objFilter.paginationPage = "previous-page";
		objFilter.paginationCount = Test_Elements.clTotalPages;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-141: Verify user navigates to first page on clicking '<<' button in pagnation";
		objTmp.TestCaseDescription = "This testcase will verify that user navgates to first page on clicking '<<' button in pagnation";
		objTmp.paginationExist = false;
		objTmp.paginationLastPage = false;
		objTmp.paginationPreviousPage = false;
		objTmp.paginationFirstPage = true;
		objTmp.paginationNextPage = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "'<<'";
		objFilter.paginationPage = "first-page";
		objFilter.paginationCount = Test_Elements.clTotalPages;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-142: Verify user navigates to next page on clicking '>' button in pagnation";
		objTmp.TestCaseDescription = "This testcase will verify that user navgates to next page on clicking '>' button in pagnation";
		objTmp.paginationExist = false;
		objTmp.paginationLastPage = false;
		objTmp.paginationPreviousPage = false;
		objTmp.paginationFirstPage = false;
		objTmp.paginationNextPage = true;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "'>'";
		objFilter.paginationPage = "next-page";
		objFilter.paginationCount = "activePageNumber";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		return lstCoccidiaModel;	
	}


	public static ArrayList<CoccidiaModel> searchRows() {
		ArrayList<CoccidiaModel> lstCoccidiaModel = new ArrayList<CoccidiaModel>();
		CoccidiaModel objTmp = new CoccidiaModel();

		objTmp.TestCaseName = "AN-CL-143: Verify 100 rows are displayed when 100 Rows per Page is selected";
		objTmp.TestCaseDescription = "This testcase will verify that 100 rows are displayed when 100 Rows per Page is selected";
		objTmp.TestCaseNameSearch = "AN-CL-144: Verify 100 rows are displayed when 100 Rows per Page is selected and user moves to next page";
		objTmp.TestCaseDescriptionSearch = "This testcase will verify that 100 rows are displayed when 100 Rows per Page is selected and user moves to next page";
		objTmp.lstFilters = new ArrayList<>();
		ReportFilters objFilter = new ReportFilters();
		objFilter.FilterName = "100 Rows per Page";
		objFilter.FilterListXPathSearch = "rows-100";
		objFilter.count = "100";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-145: Verify 250 rows are displayed when 250 Rows per Page is selected";
		objTmp.TestCaseDescription = "This testcase will verify that 250 rows are displayed when 250 Rows per Page is selected";
		objTmp.TestCaseNameSearch = "AN-CL-146: Verify 250 rows are displayed when 250 Rows per Page is selected and user moves to next page";
		objTmp.TestCaseDescriptionSearch = "This testcase will verify that 250 rows are displayed when 250 Rows per Page is selected and user moves to next page";
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "250 Rows per Page";
		objFilter.FilterListXPathSearch = "rows-250";
		objFilter.count = "250";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objTmp.TestCaseName = "AN-CL-147: Verify 500 rows are displayed when 500 Rows per Page is selected";
		objTmp.TestCaseDescription = "This testcase will verify that 100 rows are displayed when 500 Rows per Page is selected";
		objTmp.TestCaseNameSearch = "AN-CL-148: Verify 500 rows are displayed when 500 Rows per Page is selected and user moves to next page";
		objTmp.TestCaseDescriptionSearch = "This testcase will verify that 500 rows are displayed when 500 Rows per Page is selected and user moves to next page";
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "500 Rows per Page";
		objFilter.FilterListXPathSearch = "rows-500";
		objFilter.count = "500";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		return lstCoccidiaModel;
	}
	
	
	public static ArrayList<CoccidiaModel> sorting() {
		ArrayList<CoccidiaModel> lstCoccidiaModel = new ArrayList<CoccidiaModel>();
		CoccidiaModel objTmp = new CoccidiaModel();

		ReportFilters objFilter = new ReportFilters();
		objFilter.FilterName = "Lane";
		objTmp.TestCaseName = "AN-CL-218: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-laneNum";
		objFilter.count = "1";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
	    objFilter = new ReportFilters();
		objFilter.FilterName = "Lab Sample ID";
		objTmp.TestCaseName = "AN-CL-219: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-sampleId";
		objFilter.count = "2";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "QC Code";
		objTmp.TestCaseName = "AN-CL-220: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-countOutcome";
		objFilter.count = "3";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status";
		objTmp.TestCaseName = "AN-CL-221: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-result_status";
		objFilter.count = "4";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Total OPG";
		objTmp.TestCaseName = "AN-CL-222: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-totalOPG";
		objFilter.count = "5";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Small OPG";
		objTmp.TestCaseName = "AN-CL-223: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-totalSmallOPG";
		objFilter.count = "6";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Medium OPG";
		objTmp.TestCaseName = "AN-CL-224: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-totalMediumOPG";
		objFilter.count = "7";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Large OPG";
		objTmp.TestCaseName = "AN-CL-225: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-totalLargeOPG";
		objFilter.count = "8";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result";
		objTmp.TestCaseName = "AN-CL-222: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-outcome";
		objFilter.count = "9";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Assay";
		objTmp.TestCaseName = "AN-CL-223: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-pathogen";
		objFilter.count = "10";                   
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result ID";
		objTmp.TestCaseName = "AN-CL-224: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-runId";
		objFilter.count = "11";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Date";
		objTmp.TestCaseName = "AN-CL-225: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = false;
		objFilter.ColumnID = "sort-scanDateTime";
		objFilter.count = "12";
		objTmp.lstFilters.add(objFilter);       
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Site Name";
		objTmp.TestCaseName = "AN-CL-226: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-site_id";           
		objFilter.count = "13";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample Matrix";
		objTmp.TestCaseName = "AN-CL-229: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-sample_matrix";           
		objFilter.count = "14";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Customer Sample ID";
		objTmp.TestCaseName = "AN-CL-231: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-customer_sample_id";           
		objFilter.count = "15";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Received";
		objTmp.TestCaseName = "AN-CL-232: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-metadata_date_recieved";           
		objFilter.count = "16";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Cartridge ID";
		objTmp.TestCaseName = "AN-CL-233: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-cartridgeId";           
		objFilter.count = "17";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Instrument ID";
		objTmp.TestCaseName = "AN-CL-234: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-instrumentId";           
		objFilter.count = "18";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Total Count";
		objTmp.TestCaseName = "AN-CL-236: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-oocystTotalCount";           
		objFilter.count = "19";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Small Count";
		objTmp.TestCaseName = "AN-CL-237: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-oocystSmallCount";           
		objFilter.count = "20";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Medium Count";
		objTmp.TestCaseName = "AN-CL-238: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-oocystMediumCount";           
		objFilter.count = "21";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Large Count";
		objTmp.TestCaseName = "AN-CL-239: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-oocystLargeCount";           
		objFilter.count = "22";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Mean Intensity";
		objTmp.TestCaseName = "AN-CL-240: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-oocystMeanIntensity";           
		objFilter.count = "23";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Piper User";
		objTmp.TestCaseName = "AN-CL-241: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-user_name";           
		objFilter.count = "24";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Kit Lot";
		objTmp.TestCaseName = "AN-CL-242: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-kit_lot";           
		objFilter.count = "25";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Improc Version";
		objTmp.TestCaseName = "AN-CL-243: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-version";           
		objFilter.count = "26";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site ID";
		objTmp.TestCaseName = "AN-CL-244: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-testSiteId";
		objFilter.count = "27";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site Name";
		objTmp.TestCaseName = "AN-CL-245: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-testSiteName";
		objFilter.count = "28";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site Type";
		objTmp.TestCaseName = "AN-CL-246: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-collection_site_type";
		objFilter.count = "28";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Requested Assay";
		objTmp.TestCaseName = "AN-CL-247: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-requested_assay";
		objFilter.count = "28";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Flock ID";
		objTmp.TestCaseName = "AN-CL-248: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = "sort-flock_id";
		objFilter.count = "28";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		return lstCoccidiaModel;	
	}	
	
	public static ArrayList<CoccidiaModel> Wildcard() {
		ArrayList<CoccidiaModel> lstCoccidiaModel = new ArrayList<CoccidiaModel>();
		CoccidiaModel objTmp = new CoccidiaModel();

		ReportFilters objFilter = new ReportFilters();
		objFilter.FilterName = "Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-123: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-sampleId";
		objFilter.FilterXPath = "sampleId";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "1";
		objTmp.input = "T";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("T", "t"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
			
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-124: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-sampleId";
		objFilter.FilterXPath = "sampleId";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "1";
		objTmp.input = "a";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
	

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-125: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-sampleId";
		objFilter.FilterXPath = "sampleId";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "1";
		objTmp.input = "a";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status Filter";
		objTmp.TestCaseName = "AN-CL-126: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-result_status";
		objFilter.FilterXPath = "result_status";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "3";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
			
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status Filter";
		objTmp.TestCaseName = "AN-CL-127: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-result_status";
		objFilter.FilterXPath = "result_status";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "3";
		objTmp.input = "V";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("V", "v"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status Filter";
		objTmp.TestCaseName = "AN-CL-128: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-result_status";
		objFilter.FilterXPath = "result_status";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "3";
		objTmp.input = "a";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Assay Filter";
		objTmp.TestCaseName = "AN-CL-129: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-pathogen";
		objFilter.FilterXPath = "pathogen";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "9";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);  
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Assay Filter";
		objTmp.TestCaseName = "AN-CL-130: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-pathogen";
		objFilter.FilterXPath = "pathogen";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "9";
		objTmp.input = "t";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("t", "T"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Assay Filter";
		objTmp.TestCaseName = "AN-CL-131: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-pathogen";
		objFilter.FilterXPath = "pathogen";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "9";
		objTmp.input = "t";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("t", "T"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample Matrix Filter";
		objTmp.TestCaseName = "AN-CL-132: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-sample_matrix";
		objFilter.FilterXPath = "sample_matrix";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "14";
		objTmp.input = "b";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("B", "b"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample Matrix Filter";
		objTmp.TestCaseName = "AN-CL-133: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-sample_matrix";
		objFilter.FilterXPath = "sample_matrix";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "14";
		objTmp.input = "a";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample Matrix Filter";
		objTmp.TestCaseName = "AN-CL-134: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-sample_matrix";
		objFilter.FilterXPath = "sample_matrix";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "14";
		objTmp.input = "c";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("c", "c"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Customer Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-135: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-customer_sample_id";
		objFilter.FilterXPath = "customer_sample_id";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "15";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Customer Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-136: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-customer_sample_id";
		objFilter.FilterXPath = "customer_sample_id";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "15";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Customer Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-137: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-customer_sample_id";
		objFilter.FilterXPath = "customer_sample_id";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "15";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("Ay", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
	
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Cartridge ID Filter";
		objTmp.TestCaseName = "AN-CL-138: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-cartridgeId";
		objFilter.FilterXPath = "cartridgeId";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "17";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Cartridge ID Filter";
		objTmp.TestCaseName = "AN-CL-139: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-cartridgeId";
		objFilter.FilterXPath = "cartridgeId";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "17";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Cartridge ID Filter";
		objTmp.TestCaseName = "AN-CL-139: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-cartridgeId";
		objFilter.FilterXPath = "cartridgeId";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "17";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Instrument ID Filter";
		objTmp.TestCaseName = "AN-CL-141: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-instrumentId";
		objFilter.FilterXPath = "instrumentId";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "18";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Instrument ID Filter";
		objTmp.TestCaseName = "AN-CL-142: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-instrumentId";
		objFilter.FilterXPath = "instrumentId";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "18";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Instrument ID Filter";
		objTmp.TestCaseName = "AN-CL-143: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-instrumentId";
		objFilter.FilterXPath = "instrumentId";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "18";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Piper User Filter";
		objTmp.TestCaseName = "AN-CL-144: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-user_name";
		objFilter.FilterXPath = "user_name";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "24";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Piper User Filter";
		objTmp.TestCaseName = "AN-CL-145: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-user_name";
		objFilter.FilterXPath = "user_name";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "24";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Piper User Filter";
		objTmp.TestCaseName = "AN-CL-146: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-user_name";
		objFilter.FilterXPath = "user_name";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "24";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Kit Lot Filter";
		objTmp.TestCaseName = "AN-CL-147: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-kit_lot";
		objFilter.FilterXPath = "kit_lot";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "25";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Kit Lot Filter";
		objTmp.TestCaseName = "AN-CL-148: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-kit_lot";
		objFilter.FilterXPath = "kit_lot";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "25";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Kit Lot Filter";
		objTmp.TestCaseName = "AN-CL-149: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-kit_lot";
		objFilter.FilterXPath = "kit_lot";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "25";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Improc Version Filter";
		objTmp.TestCaseName = "AN-CL-150: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-version";
		objFilter.FilterXPath = "version";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "26";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Improc Version Filter";
		objTmp.TestCaseName = "AN-CL-151: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-version";
		objFilter.FilterXPath = "version";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "26";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Improc Version Filter";
		objTmp.TestCaseName = "AN-CL-152: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-version";
		objFilter.FilterXPath = "version";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "26";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site ID Filter";
		objTmp.TestCaseName = "AN-CL-153: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-testSiteId";
		objFilter.FilterXPath = "testSiteId";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "27";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site ID Filter";
		objTmp.TestCaseName = "AN-CL-154: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-testSiteId";
		objFilter.FilterXPath = "testSiteId";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "27";
		objTmp.input = "b";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("B", "b"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site ID Filter";
		objTmp.TestCaseName = "AN-CL-155: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-testSiteId";
		objFilter.FilterXPath = "testSiteId";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "27";
		objTmp.input = "b";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("B", "b"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site Name Filter";
		objTmp.TestCaseName = "AN-CL-156: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-testSiteName";
		objFilter.FilterXPath = "testSiteId";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "28";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site Name Filter";
		objTmp.TestCaseName = "AN-CL-157: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-testSiteName";
		objFilter.FilterXPath = "testSiteId";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "28";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site Name Filter";
		objTmp.TestCaseName = "AN-CL-158: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-testSiteName";
		objFilter.FilterXPath = "testSiteId";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "28";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Requested Assay Filter";
		objTmp.TestCaseName = "AN-CL-159: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-requested_assay";
		objFilter.FilterXPath = "requested_assay";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "30";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Requested Assay Filter";
		objTmp.TestCaseName = "AN-CL-160: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-requested_assay";
		objFilter.FilterXPath = "requested_assay";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "30";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Requested Assay Filter";
		objTmp.TestCaseName = "AN-CL-161: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-requested_assay";
		objFilter.FilterXPath = "requested_assay";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "30";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Flock ID Filter";
		objTmp.TestCaseName = "AN-CL-162: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-flock_id";
		objFilter.FilterXPath = "flock_id";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "31";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Flock ID Filter";
		objTmp.TestCaseName = "AN-CL-163: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-flock_id";
		objFilter.FilterXPath = "flock_id";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "31";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Flock ID Filter";
		objTmp.TestCaseName = "AN-CL-164: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = "#sort-flock_id";
		objFilter.FilterXPath = "flock_id";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "31";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site Type Filter";
		objTmp.TestCaseName = "AN-CL-165: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-collection_site_type";
		objFilter.FilterXPath = "collection_site_type";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = "29";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site Type Filter";
		objTmp.TestCaseName = "AN-CL-166: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-collection_site_type";
		objFilter.FilterXPath = "collection_site_type";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = "29";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site Type Filter";
		objTmp.TestCaseName = "AN-CL-167: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = "#sort-collection_site_type";
		objFilter.FilterXPath = "collection_site_type";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = "29";
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		return lstCoccidiaModel;
	}

	
	
}


