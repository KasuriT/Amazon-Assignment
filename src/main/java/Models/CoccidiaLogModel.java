package Models;
import java.util.ArrayList;
import java.util.Arrays;

import PageObjects.CoccidiaLogPage;

import static MiscFunctions.DateUtil.*;
import static Models.IngestionsModel.*;

public class CoccidiaLogModel {

	public String TestCaseName;
	public String TestCaseDescription;
	public String TestCaseNameSearch;
	public String TestCaseDescriptionSearch;
	public ArrayList<ReportFilters> lstFilters;
	public boolean Filter1;
	public boolean Filter2;
	public boolean Filter3;
	public boolean paginationExist;
	public boolean paginationLastPage;
	public boolean paginationNextPage;
	public boolean paginationFirstPage;
	public boolean paginationPreviousPage;
	public boolean sortLogic1;
	public boolean sortLogic2;
	public boolean startWith;
	public boolean endsWith;
	public boolean contains;
	public String input;
	public String fileJson;
	public boolean firstCase;
	public boolean secondCase;
	public boolean runIngestion;
	public String sampleID;
	public boolean viewAccess;
	public boolean unviewAccess;
	public String FilterHideID;
	public String FilterUnHideID;

	public static ArrayList<CoccidiaLogModel> lstCoccidiaDateSearch = new ArrayList<>();
	public static ArrayList<CoccidiaLogModel> lstCoccidiaFieldAccess = new ArrayList<>();
	public static ArrayList<CoccidiaLogModel> lstCoccidiaContexualCheck = new ArrayList<>();
	
	public CoccidiaLogModel() {

	}

	public static String applyFilterTitle = "Verify user can apply ";
	public static String applyFilterDesc = "This test case will verify that user can apply ";
	public static String filterIndicatorTitle = "Verify that selected checkbox/s moves to the top on applying ";
	public static String filterIndicatorDesc = "This test case will verify that selected checkbox/s moves to the top on applying ";

	public static ArrayList<CoccidiaLogModel> FillData() {
		ArrayList<CoccidiaLogModel> lstCoccidiaModel = new ArrayList<CoccidiaLogModel>();
		CoccidiaLogModel objTmp = new CoccidiaLogModel();
		ReportFilters objFilter = new ReportFilters();
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Lane Filter";
		objTmp.TestCaseName = "AN-CL-17: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-18: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clLane));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
	
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-19: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-20: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clSampleID));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("4"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status Filter";
		objTmp.TestCaseName = "AN-CL-21: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-22: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clResultStatus));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("2"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Assay Filter";
		objTmp.TestCaseName = "AN-CL-23: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-24: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clAssay));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("2"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);  
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample Matrix Filter";
		objTmp.TestCaseName = "AN-CL-27: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-28: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clSampleMatrix));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3", "4"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Customer Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-29: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-30: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clCustomerSampleID));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Received Filter";
		objTmp.TestCaseName = "AN-CL-31: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-32: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clDateReceived));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Cartridge ID Filter";
		objTmp.TestCaseName = "AN-CL-33: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-34: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clCartridgeID));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Instrument ID Filter";
		objTmp.TestCaseName = "AN-CL-35: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-36: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clInstrumentID));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3", "4"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Piper User Filter";
		objTmp.TestCaseName = "AN-CL-37: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-38: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clPiperUser));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3", "4"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Kit Lot Filter";
		objTmp.TestCaseName = "AN-CL-39: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-40: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clkitLot));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3", "4"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Improc Version Filter";
		objTmp.TestCaseName = "AN-CL-41: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-42 "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clImprocVersion));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3", "4"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site ID Filter";
		objTmp.TestCaseName = "AN-CL-43: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-44: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clTestSiteID));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site Name Filter";
		objTmp.TestCaseName = "AN-CL-45: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-46: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clTestSiteName));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Requested Assay Filter";
		objTmp.TestCaseName = "AN-CL-47: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-48: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clRequestedAssay));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Flock ID Filter";
		objTmp.TestCaseName = "AN-CL-49: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-50: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clFlockID));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status Filter";
		objTmp.TestCaseName = "AN-CL-51: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-52: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clCollectionSiteType));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("2"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Run Type Filter";
		objTmp.TestCaseName = "AN-CL-53: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-54: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clRunType));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Date Filter";
		objTmp.TestCaseName = "AN-CL-54: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-55: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clCollectionDate));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3", "4"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site ID Filter";
		objTmp.TestCaseName = "AN-CL-56: "+applyFilterTitle+objFilter.FilterName;
		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
		objTmp.TestCaseNameSearch = "AN-CL-57: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clCollectionSiteID));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3", "4"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
//		objTmp = new CoccidiaModel();
//		objFilter = new ReportFilters();
//		objFilter.FilterName = "Farm Filter";
//		objTmp.TestCaseName = "AN-CL-58: "+applyFilterTitle+objFilter.FilterName;
//		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
//		objTmp.TestCaseNameSearch = "AN-CL-59: "+filterIndicatorTitle+objFilter.FilterName;
//		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
//		objTmp.lstFilters = new ArrayList<>();
//		objFilter = new ReportFilters();
//		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clFarm));
//		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("2"));
//		objTmp.lstFilters.add(objFilter);
//		lstCoccidiaModel.add(objTmp);
//		
//		objTmp = new CoccidiaModel();
//		objFilter = new ReportFilters();
//		objFilter.FilterName = "Complex Filter";
//		objTmp.TestCaseName = "AN-CL-60: "+applyFilterTitle+objFilter.FilterName;
//		objTmp.TestCaseDescription = applyFilterDesc+objFilter.FilterName;
//		objTmp.TestCaseNameSearch = "AN-CL-61: "+filterIndicatorTitle+objFilter.FilterName;
//		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
//		objTmp.lstFilters = new ArrayList<>();
//		objFilter = new ReportFilters();
//		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clFarm));
//		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("2"));
//		objTmp.lstFilters.add(objFilter);
//		lstCoccidiaModel.add(objTmp);
			
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Two Filters";
		objTmp.TestCaseName = "AN-CL-62: Verify user can apply 2 filters at same time";
		objTmp.TestCaseDescription = "This testcase will verify that user can apply 2 filters at same time";
		objTmp.TestCaseNameSearch = "AN-CL-63: "+filterIndicatorTitle+objFilter.FilterName;
		objTmp.TestCaseDescriptionSearch = filterIndicatorDesc+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList(CoccidiaLogPage.clLane, CoccidiaLogPage.clSampleID));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("3", "3"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		return lstCoccidiaModel;
	}


	public static ArrayList<CoccidiaLogModel> FillDate() {
		ArrayList<CoccidiaLogModel> lstCoccidiaModel = new ArrayList<CoccidiaLogModel>();
		CoccidiaLogModel objTmp = new CoccidiaLogModel();

		objTmp.TestCaseName = "AN-CL-05: Verify user can filter Today date from date Filter";
		objTmp.TestCaseDescription = "This testcase will verify the functionality of date filter after selecting 'Today'";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.Filter3 = false;
		objTmp.lstFilters = new ArrayList<>();
		ReportFilters objFilter = new ReportFilters();
		objFilter.FilterName = "Date Filter";
		objFilter.FilterListXPathSearch = CoccidiaLogPage.clToday;
		objFilter.toMonth = "0";
		objFilter.fromMonth = "0";
		objFilter.toDate = "0";
		objFilter.fromDate = "0";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-06: Verify user can filter Last 24 Hours from date Filter";
		objTmp.TestCaseDescription = "This testcase will verify the functionality of Last 24 Hours after selecting 'Last 24 Hours'";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.Filter3 = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Filter";
		objFilter.FilterListXPathSearch = CoccidiaLogPage.clLast24Hours;
		objFilter.toMonth = "0";
		objFilter.fromMonth = "0";
		objFilter.toDate = "-1";
		objFilter.fromDate = "-1";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-07: Verify user can filter Last 7 Days from date Filter";
		objTmp.TestCaseDescription = "This testcase will verify the functionality of Last 7 Days after selecting 'Last 7 Days'";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.Filter3 = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Filter";
		objFilter.FilterListXPathSearch = CoccidiaLogPage.clLast7Days;
		objFilter.toMonth = "0";
		objFilter.fromMonth = "0";
		objFilter.toDate = "0";
		objFilter.fromDate = "-7";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-08: Verify user can filter Last 30 Days from date Filter";
		objTmp.TestCaseDescription = "This testcase will verify the functionality of Last 30 Days after selecting 'Last 30 Days'";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.Filter3 = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Filter";
		objFilter.FilterListXPathSearch = CoccidiaLogPage.clLast30Days;
		objFilter.toMonth = "0";
		objFilter.fromMonth = "0";
		objFilter.toDate = "-1";
		objFilter.fromDate = "-30";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-09: Verify user can filter Last Month from date Filter";
		objTmp.TestCaseDescription = "This testcase will verify the functionality of Last Month after selecting 'Last Month'";
		objTmp.Filter1 = false;
		objTmp.Filter2 = true;
		objTmp.Filter3 = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Filter";
		objFilter.FilterListXPathSearch = CoccidiaLogPage.clLastMonth;
		objFilter.toMonth = "-1";
		objFilter.fromMonth = "-1";
		objFilter.toDate = "30";
		objFilter.fromDate = "1";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-10: Verify user can filter This Month from date Filter";
		objTmp.TestCaseDescription = "This testcase will verify the functionality of This Month after selecting 'This Month'";
		objTmp.Filter1 = false;
		objTmp.Filter2 = false;
		objTmp.Filter3 = true;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Filter";
		objFilter.FilterListXPathSearch = CoccidiaLogPage.clThisMonth;
		objFilter.toMonth = "0";
		objFilter.fromMonth = "0";
		objFilter.toDate = "0";
		objFilter.fromDate = "1";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		return lstCoccidiaModel;
	}
	

	public static ArrayList<CoccidiaLogModel> EnterDate() {
		ArrayList<CoccidiaLogModel> lstCoccidiaModel = new ArrayList<CoccidiaLogModel>();
		CoccidiaLogModel objTmp = new CoccidiaLogModel();

		objTmp.TestCaseName = "AN-CL-11: Verify user cannot apply filter with invalid date";
		objTmp.TestCaseDescription = "This testcase will verify that user cannot add date with invalid from and to date";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.lstFilters = new ArrayList<>();
		ReportFilters objFilter = new ReportFilters();
		objFilter.FilterName = "Enter invalid date";
		objFilter.fromDate = "12/01/2020";
		objFilter.toDate = "11/11/202020";
		objFilter.alertMessage = "Please select a valid date";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-12: Verify user cannot apply filter with any other date format except mm/dd/yyyy";
		objTmp.TestCaseDescription = "This testcase will verify that user cannot apply filter with any other date format except mm/dd/yyyy";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Enter any other date format except mm/dd/yyyy";
		objFilter.fromDate = "12/01/2021";
		objFilter.toDate = "20/01/2021";
		objFilter.alertMessage = "Please select a valid date";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-13: Verify user cannot apply filter with from date greater than to date";
		objTmp.TestCaseDescription = "This testcase will verify that user cannot apply filter with from date greater than to date";
		objTmp.Filter1 = true;
		objTmp.Filter2 = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Enter from date greater than to date";
		objFilter.fromDate = "12/01/2020";
		objFilter.toDate = "10/01/2020";
		objFilter.alertMessage = "Please select a valid date";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-14: Verify user can search for records with valid date";
		objTmp.TestCaseDescription = "This testcase will verify that user can search for records with valid date";
		objTmp.Filter1 = false;
		objTmp.Filter2 = true;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Enter valid date";
		objFilter.fromDate = "12/01/2020";
		objFilter.toDate = "01/07/2021";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		return lstCoccidiaModel;
	}


	public static ArrayList<CoccidiaLogModel> pagination() {
		ArrayList<CoccidiaLogModel> lstCoccidiaModel = new ArrayList<CoccidiaLogModel>();
		CoccidiaLogModel objTmp = new CoccidiaLogModel();

		objTmp.TestCaseName = "AN-CL-138: Verify pagination exist on Coccidia Log report";
		objTmp.TestCaseDescription = "This testcase will verify that pagination exist on Coccidia Log report";
		objTmp.paginationExist = true;
		objTmp.paginationLastPage = false;
		objTmp.paginationPreviousPage = false;
		objTmp.paginationFirstPage = false;
		objTmp.paginationNextPage = false;
		objTmp.lstFilters = new ArrayList<>();
		ReportFilters objFilter = new ReportFilters();
		objFilter.FilterName = "Pagination exists";
		objFilter.paginationPage = "next-page";
		objFilter.paginationCount = CoccidiaLogPage.clTotalPages;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-139: Verify user navigates to last page on clicking '>>' button in pagnation";
		objTmp.TestCaseDescription = "This testcase will verify that user navgates to last page on clicking '>>' button in pagnation";
		objTmp.paginationExist = false;
		objTmp.paginationLastPage = true;
		objTmp.paginationPreviousPage = false;
		objTmp.paginationFirstPage = false;
		objTmp.paginationNextPage = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "'>>'";
		objFilter.paginationPage = "last-page";
		objFilter.paginationCount = CoccidiaLogPage.clTotalPages;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-140: Verify user navigates to previous page on clicking '<' button in pagnation";
		objTmp.TestCaseDescription = "This testcase will verify that user navgates to previous page on clicking '<' button in pagnation";
		objTmp.paginationExist = false;
		objTmp.paginationLastPage = false;
		objTmp.paginationPreviousPage = true;
		objTmp.paginationFirstPage = false;
		objTmp.paginationNextPage = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "'<'";
		objFilter.paginationPage = "previous-page";
		objFilter.paginationCount = CoccidiaLogPage.clTotalPages;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-141: Verify user navigates to first page on clicking '<<' button in pagnation";
		objTmp.TestCaseDescription = "This testcase will verify that user navgates to first page on clicking '<<' button in pagnation";
		objTmp.paginationExist = false;
		objTmp.paginationLastPage = false;
		objTmp.paginationPreviousPage = false;
		objTmp.paginationFirstPage = true;
		objTmp.paginationNextPage = false;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "'<<'";
		objFilter.paginationPage = "first-page";
		objFilter.paginationCount = CoccidiaLogPage.clTotalPages;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-142: Verify user navigates to next page on clicking '>' button in pagnation";
		objTmp.TestCaseDescription = "This testcase will verify that user navgates to next page on clicking '>' button in pagnation";
		objTmp.paginationExist = false;
		objTmp.paginationLastPage = false;
		objTmp.paginationPreviousPage = false;
		objTmp.paginationFirstPage = false;
		objTmp.paginationNextPage = true;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "'>'";
		objFilter.paginationPage = "next-page";
		objFilter.paginationCount = "activePageNumber";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		return lstCoccidiaModel;	
	}


	public static ArrayList<CoccidiaLogModel> searchRows() {
		ArrayList<CoccidiaLogModel> lstCoccidiaModel = new ArrayList<CoccidiaLogModel>();
		CoccidiaLogModel objTmp = new CoccidiaLogModel();

		objTmp.TestCaseName = "AN-CL-143: Verify 100 rows are displayed when 100 Rows per Page is selected";
		objTmp.TestCaseDescription = "This testcase will verify that 100 rows are displayed when 100 Rows per Page is selected";
		objTmp.TestCaseNameSearch = "AN-CL-144: Verify 100 rows are displayed when 100 Rows per Page is selected and user moves to next page";
		objTmp.TestCaseDescriptionSearch = "This testcase will verify that 100 rows are displayed when 100 Rows per Page is selected and user moves to next page";
		objTmp.lstFilters = new ArrayList<>();
		ReportFilters objFilter = new ReportFilters();
		objFilter.FilterName = "100 Rows per Page";
		objFilter.FilterListXPathSearch = "rows-100";
		objFilter.count = "100";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-145: Verify 250 rows are displayed when 250 Rows per Page is selected";
		objTmp.TestCaseDescription = "This testcase will verify that 250 rows are displayed when 250 Rows per Page is selected";
		objTmp.TestCaseNameSearch = "AN-CL-146: Verify 250 rows are displayed when 250 Rows per Page is selected and user moves to next page";
		objTmp.TestCaseDescriptionSearch = "This testcase will verify that 250 rows are displayed when 250 Rows per Page is selected and user moves to next page";
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "250 Rows per Page";
		objFilter.FilterListXPathSearch = "rows-250";
		objFilter.count = "250";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objTmp.TestCaseName = "AN-CL-147: Verify 500 rows are displayed when 500 Rows per Page is selected";
		objTmp.TestCaseDescription = "This testcase will verify that 100 rows are displayed when 500 Rows per Page is selected";
		objTmp.TestCaseNameSearch = "AN-CL-148: Verify 500 rows are displayed when 500 Rows per Page is selected and user moves to next page";
		objTmp.TestCaseDescriptionSearch = "This testcase will verify that 500 rows are displayed when 500 Rows per Page is selected and user moves to next page";
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterName = "500 Rows per Page";
		objFilter.FilterListXPathSearch = "rows-500";
		objFilter.count = "500";
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		return lstCoccidiaModel;
	}
	
	
	public static ArrayList<CoccidiaLogModel> sorting() {
		ArrayList<CoccidiaLogModel> lstCoccidiaModel = new ArrayList<CoccidiaLogModel>();
		CoccidiaLogModel objTmp = new CoccidiaLogModel();

		ReportFilters objFilter = new ReportFilters();
		objFilter.FilterName = "Lane";
		objTmp.TestCaseName = "AN-CL-148: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clLane;
		objFilter.count = CoccidiaLogPage.clLaneCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
	    objFilter = new ReportFilters();
		objFilter.FilterName = "Lab Sample ID";
		objTmp.TestCaseName = "AN-CL-149: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSampleID;
		objFilter.count = CoccidiaLogPage.clSampleIDCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "QC Code";
		objTmp.TestCaseName = "AN-CL-150: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clQCCode;
		objFilter.count = CoccidiaLogPage.clQCCodeCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status";
		objTmp.TestCaseName = "AN-CL-151: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clResultStatus;
		objFilter.count = CoccidiaLogPage.clResultStatusCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Total OPG";
		objTmp.TestCaseName = "AN-CL-152: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTotalOPG;
		objFilter.count = CoccidiaLogPage.clTotalOPGCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Small OPG";
		objTmp.TestCaseName = "AN-CL-153: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSmallOPG;
		objFilter.count = CoccidiaLogPage.clSmallOPGCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Medium OPG";
		objTmp.TestCaseName = "AN-CL-154: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clMediumOPG;
		objFilter.count = CoccidiaLogPage.clMediumOPGCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Large OPG";
		objTmp.TestCaseName = "AN-CL-155: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clLargeOPG;
		objFilter.count = CoccidiaLogPage.clLargeOPGCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result";
		objTmp.TestCaseName = "AN-CL-156: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clResult;
		objFilter.count = CoccidiaLogPage.clResultCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Assay";
		objTmp.TestCaseName = "AN-CL-157: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clAssay;
		objFilter.count = CoccidiaLogPage.clAssayCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result ID";
		objTmp.TestCaseName = "AN-CL-158: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clResultID;
		objFilter.count = CoccidiaLogPage.clResultIDCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Date";
		objTmp.TestCaseName = "AN-CL-159: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = false;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clResultDate;
		objFilter.count = CoccidiaLogPage.clDateCol;
		objTmp.lstFilters.add(objFilter);       
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Site Name";
		objTmp.TestCaseName = "AN-CL-160: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionSiteName;          
		objFilter.count = CoccidiaLogPage.clSiteNameCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample Matrix";
		objTmp.TestCaseName = "AN-CL-161: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSampleMatrix;          
		objFilter.count = CoccidiaLogPage.clSampleMatrixCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Customer Sample ID";
		objTmp.TestCaseName = "AN-CL-162: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCustomerSampleID;        
		objFilter.count = CoccidiaLogPage.clCSampleIDCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Received";
		objTmp.TestCaseName = "AN-CL-163: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clDateReceived;          
		objFilter.count = CoccidiaLogPage.clReceivedDateCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Cartridge ID";
		objTmp.TestCaseName = "AN-CL-164: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCartridgeID;          
		objFilter.count = CoccidiaLogPage.clCatridgeIDCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Instrument ID";
		objTmp.TestCaseName = "AN-CL-165: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clInstrumentID;         
		objFilter.count = CoccidiaLogPage.clInstrumentIDCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Total Count";
		objTmp.TestCaseName = "AN-CL-166: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTotalCount;        
		objFilter.count = CoccidiaLogPage.clTotalCountCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Small Count";
		objTmp.TestCaseName = "AN-CL-167: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSmallCount;         
		objFilter.count = CoccidiaLogPage.clSmallCountCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Medium Count";
		objTmp.TestCaseName = "AN-CL-168: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clMediumCount;          
		objFilter.count = CoccidiaLogPage.clMediumCountCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Large Count";
		objTmp.TestCaseName = "AN-CL-169: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clLargeCount;          
		objFilter.count = CoccidiaLogPage.clLargeCountCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Mean Intensity";
		objTmp.TestCaseName = "AN-CL-170: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clMeanIntensity;           
		objFilter.count = CoccidiaLogPage.clMeanIntensityCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Piper User";
		objTmp.TestCaseName = "AN-CL-171: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clPiperUser;          
		objFilter.count = CoccidiaLogPage.clPiperUserCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Kit Lot";
		objTmp.TestCaseName = "AN-CL-172: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clkitLot;         
		objFilter.count = CoccidiaLogPage.clKitLotCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Improc Version";
		objTmp.TestCaseName = "AN-CL-173: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clImprocVersion;          
		objFilter.count = CoccidiaLogPage.clImprocIDCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site ID";
		objTmp.TestCaseName = "AN-CL-174: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTestSiteID;
		objFilter.count = CoccidiaLogPage.clTestSiteIDCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site Name";
		objTmp.TestCaseName = "AN-CL-175: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTestSiteName;
		objFilter.count = CoccidiaLogPage.clTestSiteNameCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site Type";
		objTmp.TestCaseName = "AN-CL-176: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionSiteType;
		objFilter.count = CoccidiaLogPage.clCollectionSiteTypeCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Requested Assay";
		objTmp.TestCaseName = "AN-CL-177: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clRequestedAssay;
		objFilter.count = CoccidiaLogPage.clRequestedAssayCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Flock ID";
		objTmp.TestCaseName = "AN-CL-178: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clFlockID;
		objFilter.count = CoccidiaLogPage.clFlockIDCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Run Type";
		objTmp.TestCaseName = "AN-CL-179: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clRunType;
		objFilter.count = CoccidiaLogPage.clRunTypeCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Date";
		objTmp.TestCaseName = "AN-CL-180: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionDate;
		objFilter.count = CoccidiaLogPage.clCollectionDateCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site ID";
		objTmp.TestCaseName = "AN-CL-180: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionSiteID;
		objFilter.count = CoccidiaLogPage.clCollectionSiteIDCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Farm";
		objTmp.TestCaseName = "AN-CL-181: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clFarm;
		objFilter.count = CoccidiaLogPage.clFarmCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Complex";
		objTmp.TestCaseName = "AN-CL-182: Verify values are sorted on clicking on "+objFilter.FilterName+" column header";
		objTmp.TestCaseDescription = "This testcase will verify that values are sorted on clicking "+objFilter.FilterName+" column header";
		objTmp.lstFilters = new ArrayList<>();
		objTmp.sortLogic1 = true;
		objFilter.ColumnID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clComplex;
		objFilter.count = CoccidiaLogPage.clComplexCol;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
	
		return lstCoccidiaModel;	
	}	
	
	
	public static ArrayList<CoccidiaLogModel> Lock() {
		ArrayList<CoccidiaLogModel> lstCoccidiaModel = new ArrayList<CoccidiaLogModel>();
		CoccidiaLogModel objTmp;
		ReportFilters objFilter;
	
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Lane Filter";
		objTmp.TestCaseName = "AN-CL-120: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clLane+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clLane;
		objFilter.FilterApply = CoccidiaLogPage.clLane+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clLane+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-121: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clSampleID+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSampleID;
		objFilter.FilterApply = CoccidiaLogPage.clSampleID+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clSampleID+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status Filter";
		objTmp.TestCaseName = "AN-CL-122: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clResultStatus+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clResultStatus;
		objFilter.FilterApply = CoccidiaLogPage.clResultStatus+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clResultStatus+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Assay Filter";
		objTmp.TestCaseName = "AN-CL-123: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clAssay+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clAssay;
		objFilter.FilterApply = CoccidiaLogPage.clAssay+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clAssay+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample Matrix Filter";
		objTmp.TestCaseName = "AN-CL-124: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clSampleMatrix+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSampleMatrix;
		objFilter.FilterApply = CoccidiaLogPage.clSampleMatrix+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clSampleMatrix+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
	
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Customer Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-125: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCustomerSampleID+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCustomerSampleID;
		objFilter.FilterApply = CoccidiaLogPage.clCustomerSampleID+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clCustomerSampleID+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Received Filter";
		objTmp.TestCaseName = "AN-CL-126: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clDateReceived+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clDateReceived;
		objFilter.FilterApply = CoccidiaLogPage.clDateReceived+""+CoccidiaLogPage.clApplyFilter;	
		objFilter.FilterClear = CoccidiaLogPage.clDateReceived+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Cartridge ID Filter";
		objTmp.TestCaseName = "AN-CL-127: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCartridgeID+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCartridgeID;
		objFilter.FilterApply = CoccidiaLogPage.clCartridgeID+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clCartridgeID+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
	
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Instrument ID Filter";
		objTmp.TestCaseName = "AN-CL-128: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clInstrumentID+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clInstrumentID;
		objFilter.FilterApply = CoccidiaLogPage.clInstrumentID+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clInstrumentID+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Piper User Filter";
		objTmp.TestCaseName = "AN-CL-129: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clPiperUser+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clPiperUser;
		objFilter.FilterApply = CoccidiaLogPage.clPiperUser+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clPiperUser+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Kit Lot Filter";
		objTmp.TestCaseName = "AN-CL-130: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clkitLot+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clkitLot;
		objFilter.FilterApply = CoccidiaLogPage.clkitLot+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clkitLot+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Improc Version Filter";
		objTmp.TestCaseName = "AN-CL-131: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clImprocVersion+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clImprocVersion;
		objFilter.FilterApply = CoccidiaLogPage.clImprocVersion+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clImprocVersion+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site ID Filter";
		objTmp.TestCaseName = "AN-CL-132: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clTestSiteID+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTestSiteID;
		objFilter.FilterApply = CoccidiaLogPage.clTestSiteID+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clTestSiteID+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site Name Filter";
		objTmp.TestCaseName = "AN-CL-133: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clTestSiteName+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTestSiteName;
		objFilter.FilterApply = CoccidiaLogPage.clTestSiteName+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clTestSiteName+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site Type Filter";
		objTmp.TestCaseName = "AN-CL-134: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCollectionSiteType+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionSiteType;
		objFilter.FilterApply = CoccidiaLogPage.clCollectionSiteType+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clCollectionSiteType+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Requested Assay Filter";
		objTmp.TestCaseName = "AN-CL-135: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clRequestedAssay+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clRequestedAssay;
		objFilter.FilterApply = CoccidiaLogPage.clRequestedAssay+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clRequestedAssay+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Flock ID Filter";
		objTmp.TestCaseName = "AN-CL-136: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clFlockID+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clFlockID;
		objFilter.FilterApply = CoccidiaLogPage.clFlockID+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clFlockID+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Run Type Filter";
		objTmp.TestCaseName = "AN-CL-137: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clRunType+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clRunType;
		objFilter.FilterApply = CoccidiaLogPage.clRunType+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clRunType+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Date Filter";
		objTmp.TestCaseName = "AN-CL-138: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCollectionDate+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionDate;
		objFilter.FilterApply = CoccidiaLogPage.clCollectionDate+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clCollectionDate+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site ID Filter";
		objTmp.TestCaseName = "AN-CL-138: Verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify Lock Filter functionality on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCollectionDate+""+CoccidiaLogPage.clShowFilter;
		objFilter.FilterSort = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionDate;
		objFilter.FilterApply = CoccidiaLogPage.clCollectionDate+""+CoccidiaLogPage.clApplyFilter;
		objFilter.FilterClear = CoccidiaLogPage.clCollectionDate+""+CoccidiaLogPage.clClearFilter;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		return lstCoccidiaModel;
	}

	
	public static ArrayList<CoccidiaLogModel> Wildcard() {
		ArrayList<CoccidiaLogModel> lstCoccidiaModel = new ArrayList<CoccidiaLogModel>();
		CoccidiaLogModel objTmp = new CoccidiaLogModel();

		ReportFilters objFilter = new ReportFilters();
		objFilter.FilterName = "Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-60: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clSampleID;
		objFilter.FilterXPath = "sampleId";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clSampleIDCol;
		objTmp.input = "T";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("T", "t"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
			
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-61: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clSampleID;
		objFilter.FilterXPath = "sampleId";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clSampleIDCol;
		objTmp.input = "a";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
	

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-62: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clSampleID;
		objFilter.FilterXPath = "sampleId";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clSampleIDCol;
		objTmp.input = "a";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status Filter";
		objTmp.TestCaseName = "AN-CL-63: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clResultStatus;
		objFilter.FilterXPath = "result_status";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clResultStatusCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
			
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status Filter";
		objTmp.TestCaseName = "AN-CL-64: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clResultStatus;
		objFilter.FilterXPath = "result_status";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clResultStatusCol;
		objTmp.input = "V";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("V", "v"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status Filter";
		objTmp.TestCaseName = "AN-CL-65: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clResultStatus;
		objFilter.FilterXPath = "result_status";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clResultStatusCol;
		objTmp.input = "a";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Assay Filter";
		objTmp.TestCaseName = "AN-CL-66: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clAssay;
		objFilter.FilterXPath = "pathogen";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clAssayCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);  
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Assay Filter";
		objTmp.TestCaseName = "AN-CL-67: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clAssay;
		objFilter.FilterXPath = "pathogen";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clAssayCol;
		objTmp.input = "t";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("t", "T"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Assay Filter";
		objTmp.TestCaseName = "AN-CL-68: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clAssay;
		objFilter.FilterXPath = "pathogen";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clAssayCol;
		objTmp.input = "t";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("t", "T"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample Matrix Filter";
		objTmp.TestCaseName = "AN-CL-69: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clSampleMatrix;
		objFilter.FilterXPath = "sample_matrix";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clSampleMatrixCol;
		objTmp.input = "b";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("B", "b"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample Matrix Filter";
		objTmp.TestCaseName = "AN-CL-70: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clSampleMatrix;
		objFilter.FilterXPath = "sample_matrix";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clSampleMatrixCol;
		objTmp.input = "a";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample Matrix Filter";
		objTmp.TestCaseName = "AN-CL-71: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clSampleMatrix;
		objFilter.FilterXPath = "sample_matrix";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clSampleMatrixCol;
		objTmp.input = "c";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("c", "c"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Customer Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-72: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCustomerSampleID;
		objFilter.FilterXPath = "customer_sample_id";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clCSampleIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Customer Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-73: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCustomerSampleID;
		objFilter.FilterXPath = "customer_sample_id";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clCSampleIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Customer Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-74: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCustomerSampleID;
		objFilter.FilterXPath = "customer_sample_id";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clCSampleIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
	
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Cartridge ID Filter";
		objTmp.TestCaseName = "AN-CL-75: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCartridgeID;
		objFilter.FilterXPath = "cartridgeId";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clCatridgeIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Cartridge ID Filter";
		objTmp.TestCaseName = "AN-CL-76: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCartridgeID;
		objFilter.FilterXPath = "cartridgeId";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clCatridgeIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Cartridge ID Filter";
		objTmp.TestCaseName = "AN-CL-77: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCartridgeID;
		objFilter.FilterXPath = "cartridgeId";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clCatridgeIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Instrument ID Filter";
		objTmp.TestCaseName = "AN-CL-78: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clInstrumentID;
		objFilter.FilterXPath = "instrumentId";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clInstrumentIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Instrument ID Filter";
		objTmp.TestCaseName = "AN-CL-79: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clInstrumentID;
		objFilter.FilterXPath = "instrumentId";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clInstrumentIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Instrument ID Filter";
		objTmp.TestCaseName = "AN-CL-80: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clInstrumentID;
		objFilter.FilterXPath = "instrumentId";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clInstrumentIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Piper User Filter";
		objTmp.TestCaseName = "AN-CL-81: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clPiperUser;
		objFilter.FilterXPath = "user_name";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clPiperUserCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Piper User Filter";
		objTmp.TestCaseName = "AN-CL-82: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clPiperUser;
		objFilter.FilterXPath = "user_name";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clPiperUserCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Piper User Filter";
		objTmp.TestCaseName = "AN-CL-83: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clPiperUser;
		objFilter.FilterXPath = "user_name";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clPiperUserCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Kit Lot Filter";
		objTmp.TestCaseName = "AN-CL-84: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clkitLot;
		objFilter.FilterXPath = "kit_lot";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clKitLotCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Kit Lot Filter";
		objTmp.TestCaseName = "AN-CL-85: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clkitLot;
		objFilter.FilterXPath = "kit_lot";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clKitLotCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Kit Lot Filter";
		objTmp.TestCaseName = "AN-CL-86: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clkitLot;
		objFilter.FilterXPath = "kit_lot";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clKitLotCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Improc Version Filter";
		objTmp.TestCaseName = "AN-CL-87: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clImprocVersion;
		objFilter.FilterXPath = "version";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clImprocIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Improc Version Filter";
		objTmp.TestCaseName = "AN-CL-88: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clImprocVersion;
		objFilter.FilterXPath = "version";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clImprocIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Improc Version Filter";
		objTmp.TestCaseName = "AN-CL-89: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clImprocVersion;
		objFilter.FilterXPath = "version";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clImprocIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp); 

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site ID Filter";
		objTmp.TestCaseName = "AN-CL-90: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clTestSiteID;
		objFilter.FilterXPath = "testSiteId";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clTestSiteIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site ID Filter";
		objTmp.TestCaseName = "AN-CL-91: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clTestSiteID;
		objFilter.FilterXPath = "testSiteId";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clTestSiteIDCol;
		objTmp.input = "b";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("B", "b"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site ID Filter";
		objTmp.TestCaseName = "AN-CL-92: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clTestSiteID;
		objFilter.FilterXPath = "testSiteId";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clTestSiteIDCol;
		objTmp.input = "b";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("B", "b"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site Name Filter";
		objTmp.TestCaseName = "AN-CL-93: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clTestSiteName;
		objFilter.FilterXPath = "testSiteName";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clTestSiteNameCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site Name Filter";
		objTmp.TestCaseName = "AN-CL-94: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clTestSiteName;
		objFilter.FilterXPath = "testSiteName";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clTestSiteNameCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site Name Filter";
		objTmp.TestCaseName = "AN-CL-95: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clTestSiteName;
		objFilter.FilterXPath = "testSiteName";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clTestSiteNameCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Requested Assay Filter";
		objTmp.TestCaseName = "AN-CL-96: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clRequestedAssay;
		objFilter.FilterXPath = "requested_assay";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clRequestedAssayCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Requested Assay Filter";
		objTmp.TestCaseName = "AN-CL-97: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clRequestedAssay;
		objFilter.FilterXPath = "requested_assay";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clRequestedAssayCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Requested Assay Filter";
		objTmp.TestCaseName = "AN-CL-98: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clRequestedAssay;
		objFilter.FilterXPath = "requested_assay";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clRequestedAssayCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Flock ID Filter";
		objTmp.TestCaseName = "AN-CL-99: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clFlockID;
		objFilter.FilterXPath = "flock_id";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clFlockIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Flock ID Filter";
		objTmp.TestCaseName = "AN-CL-100: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clFlockID;
		objFilter.FilterXPath = "flock_id";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clFlockIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Flock ID Filter";
		objTmp.TestCaseName = "AN-CL-101: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clFlockID;
		objFilter.FilterXPath = "flock_id";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clFlockIDCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site Type Filter";
		objTmp.TestCaseName = "AN-CL-102: Verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Starts With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCollectionSiteType;
		objFilter.FilterXPath = "collection_site_type";
		objTmp.startWith = true;
		objTmp.contains = false;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clCollectionSiteTypeCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site Type Filter";
		objTmp.TestCaseName = "AN-CL-103: Verify wild card Contains search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Contains search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCollectionSiteType;
		objFilter.FilterXPath = "collection_site_type";
		objTmp.startWith = false;
		objTmp.contains = true;
		objTmp.endsWith = false;
		objFilter.ColumnID = CoccidiaLogPage.clCollectionSiteTypeCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site Type Filter";
		objTmp.TestCaseName = "AN-CL-104: Verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify wild card Ends With search on "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter.FilterID = CoccidiaLogPage.clCollectionSiteType;
		objFilter.FilterXPath = "collection_site_type";
		objTmp.startWith = false;
		objTmp.contains = false;
		objTmp.endsWith = true;
		objFilter.ColumnID = CoccidiaLogPage.clCollectionSiteTypeCol;
		objTmp.input = "A";
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("A", "a"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		return lstCoccidiaModel;
	}

	public static ArrayList<CoccidiaLogModel> ContexualCheck() {
		ArrayList<CoccidiaLogModel> lstCoccidiaModel = new ArrayList<CoccidiaLogModel>();
		CoccidiaLogModel objTmp;
		ReportFilters objFilter;
	
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Lab Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-109: Apply "+objFilter.FilterName+" and verify all other filters behaves contexually";
		objTmp.TestCaseDescription = "This testcase will verify that after applying "+objFilter.FilterName+" all other filters behave contexually";
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objTmp.runIngestion = true;
		objTmp.firstCase = true;
		objTmp.secondCase = false;
		objTmp.sampleID = dateYYYYMMDD+"-Cocci-"+date0;
	    objTmp.fileJson = "[{'LANE':'1','PATHOGEN':'Coccidia','SAMPLEID':'"+objTmp.sampleID+"','SCANDATETIME':'"+date100+"','FIGUREOFMERIT':'0','OUTCOME':'','STATUSCODE':'','CALIBRATED_PIPER_COUNTS':'0','COUNT_OUTCOME':'','CARTRIDGEID':'CartIDContexual"+date0+"','EXPERIMENTID':'','INSTRUMENTID':'"+InstrumentID+"','USERID':'"+UserID+"','RUN_ID':'"+objTmp.sampleID+"','RUN_TYPE':'SCRIPT_swtest','LANE_NO':'1','DATE':'','TIME':'','LANE_TOTAL_OOCYST_COUNT':'13','LANE_TOTAL_OOCYST_MEAN_INTENSITY':'','LANE_TOTAL_OOCYST_RANGE_INTENSITY':'','LANE_TOTAL_OOCYST_CV_INTENSITY':'','LANE_TOTAL_OOCYST_MEAN_AREA':'','LANE_TOTAL_OOCYST_RANGE_AREA':'','LANE_TOTAL_OOCYST_CV_AREA':'','LANE_TOTAL_OOCYST_MEAN_MAJORAXIS':'','LANE_TOTAL_OOCYST_RANGE_MAJORAXIS':'','LANE_TOTAL_OOCYST_CV_MAJORAXIS':'','LANE_TOTAL_OOCYST_MEAN_MINORAXIS':'','LANE_TOTAL_OOCYST_RANGE_MINORAXIS':'','LANE_TOTAL_OOCYST_CV_MINORAXIS':'','LANE_TOTAL_OOCYST_COUNT_SPORULATED':'','LANE_TOTAL_OOCYST_COUNT_UNSPORULATED':'','LANE_TOTAL_OOCYST_COUNT_UNCERTAINSPORULATION':'','LANE_SMALL_OOCYST_COUNT':'130','LANE_SMALL_OOCYST_MEAN_INTENSITY':'','LANE_SMALL_OOCYST_RANGE_INTENSITY':'','LANE_SMALL_OOCYST_CV_INTENSITY':'','LANE_SMALL_OOCYST_MEAN_AREA':'','LANE_SMALL_OOCYST_RANGE_AREA':'','LANE_SMALL_OOCYST_CV_AREA':'','LANE_SMALL_OOCYST_MEAN_MAJORAXIS':'','LANE_SMALL_OOCYST_RANGE_MAJORAXIS':'','LANE_SMALL_OOCYST_CV_MAJORAXIS':'','LANE_SMALL_OOCYST_MEAN_MINORAXIS':'','LANE_SMALL_OOCYST_RANGE_MINORAXIS':'','LANE_SMALL_OOCYST_CV_MINORAXIS':'','LANE_SMALL_OOCYST_COUNT_SPORULATED':'','LANE_SMALL_OOCYST_COUNT_UNSPORULATED':'','LANE_SMALL_OOCYST_COUNT_UNCERTAINSPORULATION':'','LANE_MEDIUM_OOCYST_COUNT':'130','LANE_MEDIUM_OOCYST_MEAN_INTENSITY':'','LANE_MEDIUM_OOCYST_RANGE_INTENSITY':'','LANE_MEDIUM_OOCYST_CV_INTENSITY':'','LANE_MEDIUM_OOCYST_MEAN_AREA':'','LANE_MEDIUM_OOCYST_RANGE_AREA':'','LANE_MEDIUM_OOCYST_CV_AREA':'','LANE_MEDIUM_OOCYST_MEAN_MAJORAXIS':'','LANE_MEDIUM_OOCYST_RANGE_MAJORAXIS':'','LANE_MEDIUM_OOCYST_CV_MAJORAXIS':'','LANE_MEDIUM_OOCYST_MEAN_MINORAXIS':'','LANE_MEDIUM_OOCYST_RANGE_MINORAXIS':'','LANE_MEDIUM_OOCYST_CV_MINORAXIS':'','LANE_MEDIUM_OOCYST_COUNT_SPORULATED':'','LANE_MEDIUM_OOCYST_COUNT_UNSPORULATED':'','LANE_MEDIUM_OOCYST_COUNT_UNCERTAINSPORULATION':'','LANE_LARGE_OOCYST_COUNT':'120','LANE_LARGE_OOCYST_MEAN_INTENSITY':'','LANE_LARGE_OOCYST_RANGE_INTENSITY':'','LANE_LARGE_OOCYST_CV_INTENSITY':'','LANE_LARGE_OOCYST_MEAN_AREA':'','LANE_LARGE_OOCYST_RANGE_AREA':'','LANE_LARGE_OOCYST_CV_AREA':'','LANE_LARGE_OOCYST_MEAN_MAJORAXIS':'','LANE_LARGE_OOCYST_RANGE_MAJORAXIS':'','LANE_LARGE_OOCYST_CV_MAJORAXIS':'','LANE_LARGE_OOCYST_MEAN_MINORAXIS':'','LANE_LARGE_OOCYST_RANGE_MINORAXIS':'','LANE_LARGE_OOCYST_CV_MINORAXIS':'','LANE_LARGE_OOCYST_COUNT_SPORULATED':'','LANE_LARGE_OOCYST_COUNT_UNSPORULATED':'','LANE_LARGE_OOCYST_COUNT_UNCERTAINSPORULATION':'','STATUS':'','LANE_TOTAL_AREA_UM2':'','LANE_NOISE_AREA_UM2':'','LANE_NOISE_RATIO_PERCENT':'','LANE_NOISE_OBJECT_COUNT':'','LANE_SMALL_NOISE_OBJECT_COUNT':'','LANE_MEDIUM_NOISE_OBJECT_COUNT':'','LANE_LARGE_NOISE_OBJECT_COUNT':'','LANE_EXTRA_LARGE_NOISE_OBJECT_COUNT':'','IMPROC':'ImprocCocc01','VERSION':'"+ImprocVersion_Cocci+"','ERROR_CODE':'Exception','IE_COLLECTION_SITE_ID':''}]";
	    objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("sampleId"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList(objTmp.sampleID));
		objFilter.LstFilterSearch = new ArrayList<>(Arrays.asList("laneNum", "pathogen", "sample_matrix", "customer_sample_id", "metadata_date_recieved", "cartridgeId", "instrumentId", "user_name", "kit_lot", "version", "testSiteId", "testSiteName", "requested_assay", "flock_id", "runType"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Cartridge ID Filter";
		objTmp.TestCaseName = "AN-CL-110: Apply "+objFilter.FilterName+" and verify all other filters behaves contexually";
		objTmp.TestCaseDescription = "This testcase will verify that after applying "+objFilter.FilterName+" all other filters behave contexually";
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objTmp.runIngestion = false;
		objTmp.firstCase = true;
		objTmp.secondCase = false;
		objTmp.sampleID = dateYYYYMMDD+"-Cocci-"+date0;
	    objTmp.fileJson = "[{'LANE':'1','PATHOGEN':'Coccidia','SAMPLEID':'"+objTmp.sampleID+"','SCANDATETIME':'"+date100+"','FIGUREOFMERIT':'0','OUTCOME':'','STATUSCODE':'','CALIBRATED_PIPER_COUNTS':'0','COUNT_OUTCOME':'','CARTRIDGEID':'CartIDContexual"+date0+"','EXPERIMENTID':'','INSTRUMENTID':'"+InstrumentID+"','USERID':'"+UserID+"','RUN_ID':'"+objTmp.sampleID+"','RUN_TYPE':'SCRIPT_swtest','LANE_NO':'1','DATE':'','TIME':'','LANE_TOTAL_OOCYST_COUNT':'13','LANE_TOTAL_OOCYST_MEAN_INTENSITY':'','LANE_TOTAL_OOCYST_RANGE_INTENSITY':'','LANE_TOTAL_OOCYST_CV_INTENSITY':'','LANE_TOTAL_OOCYST_MEAN_AREA':'','LANE_TOTAL_OOCYST_RANGE_AREA':'','LANE_TOTAL_OOCYST_CV_AREA':'','LANE_TOTAL_OOCYST_MEAN_MAJORAXIS':'','LANE_TOTAL_OOCYST_RANGE_MAJORAXIS':'','LANE_TOTAL_OOCYST_CV_MAJORAXIS':'','LANE_TOTAL_OOCYST_MEAN_MINORAXIS':'','LANE_TOTAL_OOCYST_RANGE_MINORAXIS':'','LANE_TOTAL_OOCYST_CV_MINORAXIS':'','LANE_TOTAL_OOCYST_COUNT_SPORULATED':'','LANE_TOTAL_OOCYST_COUNT_UNSPORULATED':'','LANE_TOTAL_OOCYST_COUNT_UNCERTAINSPORULATION':'','LANE_SMALL_OOCYST_COUNT':'130','LANE_SMALL_OOCYST_MEAN_INTENSITY':'','LANE_SMALL_OOCYST_RANGE_INTENSITY':'','LANE_SMALL_OOCYST_CV_INTENSITY':'','LANE_SMALL_OOCYST_MEAN_AREA':'','LANE_SMALL_OOCYST_RANGE_AREA':'','LANE_SMALL_OOCYST_CV_AREA':'','LANE_SMALL_OOCYST_MEAN_MAJORAXIS':'','LANE_SMALL_OOCYST_RANGE_MAJORAXIS':'','LANE_SMALL_OOCYST_CV_MAJORAXIS':'','LANE_SMALL_OOCYST_MEAN_MINORAXIS':'','LANE_SMALL_OOCYST_RANGE_MINORAXIS':'','LANE_SMALL_OOCYST_CV_MINORAXIS':'','LANE_SMALL_OOCYST_COUNT_SPORULATED':'','LANE_SMALL_OOCYST_COUNT_UNSPORULATED':'','LANE_SMALL_OOCYST_COUNT_UNCERTAINSPORULATION':'','LANE_MEDIUM_OOCYST_COUNT':'130','LANE_MEDIUM_OOCYST_MEAN_INTENSITY':'','LANE_MEDIUM_OOCYST_RANGE_INTENSITY':'','LANE_MEDIUM_OOCYST_CV_INTENSITY':'','LANE_MEDIUM_OOCYST_MEAN_AREA':'','LANE_MEDIUM_OOCYST_RANGE_AREA':'','LANE_MEDIUM_OOCYST_CV_AREA':'','LANE_MEDIUM_OOCYST_MEAN_MAJORAXIS':'','LANE_MEDIUM_OOCYST_RANGE_MAJORAXIS':'','LANE_MEDIUM_OOCYST_CV_MAJORAXIS':'','LANE_MEDIUM_OOCYST_MEAN_MINORAXIS':'','LANE_MEDIUM_OOCYST_RANGE_MINORAXIS':'','LANE_MEDIUM_OOCYST_CV_MINORAXIS':'','LANE_MEDIUM_OOCYST_COUNT_SPORULATED':'','LANE_MEDIUM_OOCYST_COUNT_UNSPORULATED':'','LANE_MEDIUM_OOCYST_COUNT_UNCERTAINSPORULATION':'','LANE_LARGE_OOCYST_COUNT':'120','LANE_LARGE_OOCYST_MEAN_INTENSITY':'','LANE_LARGE_OOCYST_RANGE_INTENSITY':'','LANE_LARGE_OOCYST_CV_INTENSITY':'','LANE_LARGE_OOCYST_MEAN_AREA':'','LANE_LARGE_OOCYST_RANGE_AREA':'','LANE_LARGE_OOCYST_CV_AREA':'','LANE_LARGE_OOCYST_MEAN_MAJORAXIS':'','LANE_LARGE_OOCYST_RANGE_MAJORAXIS':'','LANE_LARGE_OOCYST_CV_MAJORAXIS':'','LANE_LARGE_OOCYST_MEAN_MINORAXIS':'','LANE_LARGE_OOCYST_RANGE_MINORAXIS':'','LANE_LARGE_OOCYST_CV_MINORAXIS':'','LANE_LARGE_OOCYST_COUNT_SPORULATED':'','LANE_LARGE_OOCYST_COUNT_UNSPORULATED':'','LANE_LARGE_OOCYST_COUNT_UNCERTAINSPORULATION':'','STATUS':'','LANE_TOTAL_AREA_UM2':'','LANE_NOISE_AREA_UM2':'','LANE_NOISE_RATIO_PERCENT':'','LANE_NOISE_OBJECT_COUNT':'','LANE_SMALL_NOISE_OBJECT_COUNT':'','LANE_MEDIUM_NOISE_OBJECT_COUNT':'','LANE_LARGE_NOISE_OBJECT_COUNT':'','LANE_EXTRA_LARGE_NOISE_OBJECT_COUNT':'','IMPROC':'ImprocCocc01','VERSION':'"+ImprocVersion_Cocci+"','ERROR_CODE':'Exception','IE_COLLECTION_SITE_ID':''}]";
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("cartridgeId"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("CartIDContexual"+date0));
		objFilter.LstFilterSearch = new ArrayList<>(Arrays.asList("laneNum", "sampleId", "pathogen", "sample_matrix", "customer_sample_id", "metadata_date_recieved", "instrumentId", "user_name", "kit_lot", "version", "testSiteId", "testSiteName", "requested_assay", "flock_id", "runType"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
	
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Lane Filter";
		objTmp.TestCaseName = "AN-CL-111: Apply "+objFilter.FilterName+" and verify all other filters behaves contexually";
		objTmp.TestCaseDescription = "This testcase will verify that after applying "+objFilter.FilterName+" all other filters behave contexually";
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objTmp.firstCase = false;
		objTmp.secondCase = true;
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("laneNum"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("10"));
		objFilter.LstFilterSearch = new ArrayList<>(Arrays.asList("sampleId", "sample_matrix", "cartridgeId"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Instrument Filter";
		objTmp.TestCaseName = "AN-CL-112: Apply "+objFilter.FilterName+" and verify all other filters behaves contexually";
		objTmp.TestCaseDescription = "This testcase will verify that after applying "+objFilter.FilterName+" all other filters behave contexually";
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objTmp.firstCase = false;
		objTmp.secondCase = true;
		objFilter.LstFilterXpath = new ArrayList<>(Arrays.asList("instrumentId"));
		objFilter.LstFilterValues = new ArrayList<>(Arrays.asList("PSN0009"));
		objFilter.LstFilterSearch = new ArrayList<>(Arrays.asList("sampleId", "sample_matrix", "cartridgeId", "version"));
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
			
		return lstCoccidiaModel;
	}	
	
	
	public static ArrayList<CoccidiaLogModel> FieldAccess() {
		ArrayList<CoccidiaLogModel> lstCoccidiaModel = new ArrayList<CoccidiaLogModel>();
		CoccidiaLogModel objTmp;
		ReportFilters objFilter;
	
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Lane Filter";
		objTmp.TestCaseName = "AN-CL-181: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clLaneCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clLane;
		objTmp.FilterUnHideID = "";
		objTmp.unviewAccess = true;   //will hide the current column
		objTmp.viewAccess = false;    //will unhide the previoucly hidden column
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
			
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-182: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clSampleIDCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSampleID;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clLane;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
	
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "QC Code Filter";
		objTmp.TestCaseName = "AN-CL-183: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clQCCodeCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clQCCode;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSampleID;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Status Filter";
		objTmp.TestCaseName = "AN-CL-184: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clResultStatusCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clResultStatus;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clQCCode;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Total OPG Filter";
		objTmp.TestCaseName = "AN-CL-185: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clTotalOPGCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTotalOPG;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clResultStatus;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
//		objTmp = new CoccidiaModel();
//		objFilter = new ReportFilters();
//		objFilter.FilterName = "Small OPG Filter";
//		objTmp.TestCaseName = "AN-CL-186: Verify field level accessibility of "+objFilter.FilterName;
//		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
//		objTmp.lstFilters = new ArrayList<>();
//		objFilter = new ReportFilters();
//		objFilter.FilterID = CoccidiaLogPage.clSmallCountCol;
//		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSmallOPG;
//		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTotalOPG;
//		objTmp.unviewAccess = true;
//		objTmp.viewAccess = false;
//		objTmp.lstFilters.add(objFilter);
//		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Medium OPG Filter";
		objTmp.TestCaseName = "AN-CL-187: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clMediumOPGCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clMediumOPG;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSmallOPG;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
							
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Large OPG Filter";
		objTmp.TestCaseName = "AN-CL-188: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clLargeOPGCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clLargeOPG;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clMediumOPG;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
			
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Filter";
		objTmp.TestCaseName = "AN-CL-189: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clResultCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clResult;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clLargeOPG;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Assay Filter";
		objTmp.TestCaseName = "AN-CL-190: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clAssayCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clAssay;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clResult;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result ID Filter";
		objTmp.TestCaseName = "AN-CL-191: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clResultIDCol;
		objTmp.FilterHideID = "";
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clAssay;
		objTmp.unviewAccess = false;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Date Filter";
		objTmp.TestCaseName = "AN-CL-192: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clDateCol;
		objTmp.FilterHideID = "";
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clResultDate;
		objTmp.unviewAccess = false;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Result Time Filter";
		objTmp.TestCaseName = "AN-CL-193: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clTimeCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clResultTime;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clAssay;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site Name Filter";
		objTmp.TestCaseName = "AN-CL-194: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clSiteNameCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionSiteName;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clResultTime;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Sample Matrix Filter";
		objTmp.TestCaseName = "AN-CL-195: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clSampleMatrixCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSampleMatrix;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionSiteName;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Customer Sample ID Filter";
		objTmp.TestCaseName = "AN-CL-196: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clCSampleIDCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCustomerSampleID;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSampleMatrix;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Date Received Filter";
		objTmp.TestCaseName = "AN-CL-197: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clReceivedDateCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clDateReceived;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCustomerSampleID;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Cartridge ID Filter";
		objTmp.TestCaseName = "AN-CL-198: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clCatridgeIDCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCartridgeID;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clDateReceived;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Instrument ID Filter";
		objTmp.TestCaseName = "AN-CL-199: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clInstrumentIDCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clInstrumentID;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCartridgeID;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Total Count Filter";
		objTmp.TestCaseName = "AN-CL-200: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clTotalCountCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTotalCount;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clInstrumentID;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Small Count Filter";
		objTmp.TestCaseName = "AN-CL-201: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clSmallCountCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSmallCount;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTotalCount;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Medium Count Filter";
		objTmp.TestCaseName = "AN-CL-202: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clMediumCountCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clMediumCount;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clSmallCount;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Large Count Filter";
		objTmp.TestCaseName = "AN-CL-203: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clLargeCountCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clLargeCount;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clMediumCount;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Mean Intensity Filter";
		objTmp.TestCaseName = "AN-CL-204: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clMeanIntensityCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clMeanIntensity;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clLargeCount;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Piper User Filter";
		objTmp.TestCaseName = "AN-CL-205: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clPiperUserCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clPiperUser;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clMeanIntensity;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Kit Lot Filter";
		objTmp.TestCaseName = "AN-CL-206: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clKitLotCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clkitLot;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clPiperUser;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Improc Version Filter";
		objTmp.TestCaseName = "AN-CL-207: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clImprocIDCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clImprocVersion;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clkitLot;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
	
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site ID Filter";
		objTmp.TestCaseName = "AN-CL-208: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clTestSiteIDCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTestSiteID;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clImprocVersion;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Test Site Name Filter";
		objTmp.TestCaseName = "AN-CL-209: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clTestSiteNameCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTestSiteName;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTestSiteID;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Requested Assay Filter";
		objTmp.TestCaseName = "AN-CL-210: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clRequestedAssayCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clRequestedAssay;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clTestSiteID;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Flock ID Filter";
		objTmp.TestCaseName = "AN-CL-211: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clFlockIDCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clFlockID;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clRequestedAssay;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);

		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Run Type Filter";
		objTmp.TestCaseName = "AN-CL-212: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clRunTypeCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clRunType;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clFlockID;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
			
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Date Filter";
		objTmp.TestCaseName = "AN-CL-213: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clCollectionDateCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionDate;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clRunType;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Collection Site ID Filter";
		objTmp.TestCaseName = "AN-CL-214: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clCollectionSiteIDCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionSiteID;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionDate;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Farm Filter";
		objTmp.TestCaseName = "AN-CL-215: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clFarmCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clFarm;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionSiteID;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Complex Filter";
		objTmp.TestCaseName = "AN-CL-216: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clComplexCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clComplex;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clFarm;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Vaccine Program Filter";
		objTmp.TestCaseName = "AN-CL-217: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clVaccinceProgramCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clVaccineProgram;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clComplex;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Feed Program Filter";
		objTmp.TestCaseName = "AN-CL-218: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clFeedProgramCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clFeedProgram;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clVaccineProgram;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Flock Day Filter";
		objTmp.TestCaseName = "AN-CL-219: Verify field level accessibility of "+objFilter.FilterName;
		objTmp.TestCaseDescription = "This testcase will Verify field level accessibility of "+objFilter.FilterName;
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clFlockDayCol;
		objTmp.FilterHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clFlockDay;
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clFeedProgram;
		objTmp.unviewAccess = true;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
		
		objTmp = new CoccidiaLogModel();
		objFilter = new ReportFilters();
		objFilter.FilterName = "Select back all columns";
		objTmp.TestCaseName = "AN-CL-220: Select back all unselected columns";
		objTmp.TestCaseDescription = "This testcase will select back all unselected columns";
		objTmp.lstFilters = new ArrayList<>();
		objFilter = new ReportFilters();
		objFilter.FilterID = CoccidiaLogPage.clFieldAccessCol;
		objTmp.FilterHideID = "";
		objTmp.FilterUnHideID = CoccidiaLogPage.clSortFilter+""+CoccidiaLogPage.clCollectionSiteID;
		objTmp.unviewAccess = false;
		objTmp.viewAccess = true;
		objTmp.lstFilters.add(objFilter);
		lstCoccidiaModel.add(objTmp);
	
		return lstCoccidiaModel;
	}
	
}


